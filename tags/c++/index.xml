<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on acronymor&#39;s blog</title>
    <link>https://acronymor.com/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on acronymor&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 20 Apr 2023 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://acronymor.com/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ch10-C&#43;&#43; 之 memory_order</title>
      <link>https://acronymor.com/posts/c&#43;&#43;-basic/ch10/</link>
      <pubDate>Thu, 20 Apr 2023 00:00:00 +0800</pubDate>
      <guid>https://acronymor.com/posts/c&#43;&#43;-basic/ch10/</guid>
      <description>&lt;p&gt;&lt;code&gt;std::memory_order&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch03-C&#43;&#43; STL 之 Container</title>
      <link>https://acronymor.com/posts/c&#43;&#43;-stl/ch03/</link>
      <pubDate>Fri, 24 Jun 2022 00:00:00 +0800</pubDate>
      <guid>https://acronymor.com/posts/c&#43;&#43;-stl/ch03/</guid>
      <description> 容器 底层数据结构 时间复杂度 有无序 可否重复 其他 array 数组 随机读改 O(1) 无序 可重复 支持随机访问 vector 数组 随机读改、尾部插入、尾部删除 O(1)；头部插入、头部删除 O(n) 无序 可重复 支持随机访问 deque 双端队列 头尾插入、头尾删除 O(1) 无序 可重复 一个中央控制器 + 多个缓冲区，支持首尾快速增删，支持随机访问 forward_list 单向链表 插入、删除 O(1) 无序 可重复 不支持随机访问 list 双向链表 插入、删除 O(1) 无序 可重复 不支持随机访问 stack deque / list 顶部插入、顶部删除 O(1) 无序 可重复 deque 或 list 封闭头端开口，不用 vector 的原因应该是容量大小有限制，扩容耗时 queue deque / list 尾部插入、头部删除 O(1) 无序 可重复 deque 或 list 封闭头端开口，不用 vector 的原因应该是容量大小有限制，扩容耗时 priority_queue vector + max-heap 插入、删除 O(log2n) 有序 可重复 vector 容器+heap 处理规则 set 红黑树 插入、删除、查找 O(log2n) 有序 不可重复 multiset 红黑树 插入、删除、查找 O(log2n) 有序 可重复 map 红黑树 插入、删除、查找 O(log2n) 有序 不可重复 multimap 红黑树 插入、删除、查找 O(log2n) 有序 可重复 unordered_set 哈希表 插入、删除、查找 O(1) 最差 O(n) 无序 不可重复 unordered_multiset 哈希表 插入、删除、查找 O(1) 最差 O(n) 无序 可重复 unordered_map 哈希表 插入、删除、查找 O(1) 最差 O(n) 无序 不可重复 unordered_multimap 哈希表 插入、删除、查找 O(1) 最差 O(n) 无序 可重复 </description>
    </item>
    <item>
      <title>Ch02-C&#43;&#43; 之 trait</title>
      <link>https://acronymor.com/posts/c&#43;&#43;-stl/ch02/</link>
      <pubDate>Tue, 21 Jun 2022 00:00:00 +0800</pubDate>
      <guid>https://acronymor.com/posts/c&#43;&#43;-stl/ch02/</guid>
      <description>&lt;p&gt;trait 并不是 C++ 的关键字之类的，属于 C++ 的一种“机制”，或者说 C++ 特有的一种编程小技巧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch01-C&#43;&#43; 之 STL</title>
      <link>https://acronymor.com/posts/c&#43;&#43;-stl/ch01/</link>
      <pubDate>Mon, 20 Jun 2022 00:00:00 +0800</pubDate>
      <guid>https://acronymor.com/posts/c&#43;&#43;-stl/ch01/</guid>
      <description>&lt;p&gt;STL 是 1979 年诞生，1998 年加入 cpp 标准库。C11 出来之前 boost 库是常见的智能指针库，c11 有自己的智能指针。且有多个 STL 版本，如 &lt;code&gt;SGI STL&lt;/code&gt;，&lt;code&gt;GNU STL&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch09-C&#43;&#43; 之 point</title>
      <link>https://acronymor.com/posts/c&#43;&#43;-basic/ch09/</link>
      <pubDate>Thu, 28 Apr 2022 00:00:00 +0800</pubDate>
      <guid>https://acronymor.com/posts/c&#43;&#43;-basic/ch09/</guid>
      <description>&lt;p&gt;&lt;code&gt;std::unique_ptr&lt;/code&gt;，&lt;code&gt;std::shared_ptr&lt;/code&gt;，&lt;code&gt;std::weak_ptr&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch08-C&#43;&#43; 之 reference</title>
      <link>https://acronymor.com/posts/c&#43;&#43;-basic/ch08/</link>
      <pubDate>Wed, 27 Apr 2022 00:00:00 +0800</pubDate>
      <guid>https://acronymor.com/posts/c&#43;&#43;-basic/ch08/</guid>
      <description>&lt;p&gt;&lt;code&gt;lvalue reference&lt;/code&gt;，&lt;code&gt;lvalue reference&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch07-C&#43;&#43; 之 keyword</title>
      <link>https://acronymor.com/posts/c&#43;&#43;-basic/ch07/</link>
      <pubDate>Mon, 25 Apr 2022 00:00:00 +0800</pubDate>
      <guid>https://acronymor.com/posts/c&#43;&#43;-basic/ch07/</guid>
      <description>&lt;p&gt;&lt;code&gt;virtual&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch06-C&#43;&#43; 之 keyword</title>
      <link>https://acronymor.com/posts/c&#43;&#43;-basic/ch06/</link>
      <pubDate>Sun, 24 Apr 2022 00:00:00 +0800</pubDate>
      <guid>https://acronymor.com/posts/c&#43;&#43;-basic/ch06/</guid>
      <description>&lt;p&gt;&lt;code&gt;static_cast&lt;/code&gt;，&lt;code&gt;dynamic_cast&lt;/code&gt;，&lt;code&gt;const_cast&lt;/code&gt;，&lt;code&gt;reinterpret_cast&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch05-C&#43;&#43; 之 keyword</title>
      <link>https://acronymor.com/posts/c&#43;&#43;-basic/ch05/</link>
      <pubDate>Sat, 23 Apr 2022 00:00:00 +0800</pubDate>
      <guid>https://acronymor.com/posts/c&#43;&#43;-basic/ch05/</guid>
      <description>&lt;p&gt;&lt;code&gt;new&lt;/code&gt;，&lt;code&gt;delete&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch04-C&#43;&#43; 之 keyword</title>
      <link>https://acronymor.com/posts/c&#43;&#43;-basic/ch04/</link>
      <pubDate>Fri, 22 Apr 2022 00:00:00 +0800</pubDate>
      <guid>https://acronymor.com/posts/c&#43;&#43;-basic/ch04/</guid>
      <description>&lt;p&gt;&lt;code&gt;define&lt;/code&gt;，&lt;code&gt;typedef&lt;/code&gt;，&lt;code&gt;using&lt;/code&gt;，&lt;code&gt;inline&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch03-C&#43;&#43; 之 keyword</title>
      <link>https://acronymor.com/posts/c&#43;&#43;-basic/ch03/</link>
      <pubDate>Thu, 21 Apr 2022 00:00:00 +0800</pubDate>
      <guid>https://acronymor.com/posts/c&#43;&#43;-basic/ch03/</guid>
      <description>&lt;p&gt;&lt;code&gt;static&lt;/code&gt;，&lt;code&gt;const&lt;/code&gt;，&lt;code&gt;constexpr&lt;/code&gt;，&lt;code&gt;volatile&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ch01-C&#43;&#43; 之 基础</title>
      <link>https://acronymor.com/posts/c&#43;&#43;-basic/ch01/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0800</pubDate>
      <guid>https://acronymor.com/posts/c&#43;&#43;-basic/ch01/</guid>
      <description>1.数据类型 # 基本类型 所占大小 (bit) 最小范围 最大范围 void 0 bool 8 char 8 -128 127 unsigned char 8 0 255 short (signed short) 16 -32768 32767 unsigned short 16 0 65535 int (signed int) 32 -2147483648 2147483647 unsigned (unsigned int) 32 0 4294967295 long (signed long) 32 -2147483648 2147483647 unsigned long 32 0 4294967295 float 32 -3.4×10^38 3.4*10^38 double 64 -1.7×10^308 1.7×10^308 long double 64 -1.7×10^308 1.7×10^308 long long 64 -9223372036854775808 9223372036854775807 2.</description>
    </item>
    <item>
      <title>Ch02-C&#43;&#43; 之 内存模型</title>
      <link>https://acronymor.com/posts/c&#43;&#43;-basic/ch02/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0800</pubDate>
      <guid>https://acronymor.com/posts/c&#43;&#43;-basic/ch02/</guid>
      <description>&lt;p&gt;内存模型就是一种语言它独特的管理者一套程序的机制，每种语言都有自己的一套程序机制。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
